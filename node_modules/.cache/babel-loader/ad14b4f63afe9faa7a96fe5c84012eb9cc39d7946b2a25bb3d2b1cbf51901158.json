{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kkubo\\\\Documents\\\\00_GS\\\\01_assignment\\\\10_php4\\\\clone\\\\reactjs-php-login-system\\\\frontend\\\\src\\\\components\\\\Upimage.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Alert, Typography, Button, TextField, IconButton, CircularProgress } from \"@mui/material\";\nimport { Header } from \"./Header\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Upimage = () => {\n  _s();\n  /*------------------------ログイン確認------------------------*/\n  const navigate = useNavigate();\n  const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n  const username = userData === null || userData === void 0 ? void 0 : userData.username;\n  useEffect(() => {\n    const loggedIn = sessionStorage.getItem(\"loggedIn\");\n    if (!loggedIn) {\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  /*------------------------画像アップ------------------------*/\n  const [isCommentSending, setIsCommentSending] = useState(false);\n  const [images, setImages] = useState([]);\n  const maxImagesUpload = 4; // 画像を最大4枚まで選択・アップロード\n  const [commentText, setCommentText] = useState(\"\");\n  const inputId = Math.random().toString(32).substring(2);\n  const baseUrl = \"http://localhost/00_GS/01_assignment/10_php4\";\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    setIsCommentSending(true);\n    const target = e.target;\n\n    // const data = new FormData();\n\n    // images.map((image) => {\n    //     data.append(\"images[]\", image);\n    // });\n\n    // data.append(\"comment\", target.comment?.value || \"\");\n    // const postedComment = await axios.post(baseUrl + \"/api/upimages.php\", data, {\n    //     headers: { \"Content-Type\": \"multipart/form-data\" },\n    // });\n\n    const data = images;\n    console.log(images);\n\n    // const postedComment = await axios.post(baseUrl + \"/api/upimages.php\", data, {\n    //     headers: { \"Content-Type\": \"multipart/form-data\" },\n    // });\n\n    setIsCommentSending(false);\n  };\n  const handleOnAddImage = e => {\n    if (!e.target.files) return;\n    setImages([...images, ...e.target.files]);\n  };\n  const handleOnRemoveImage = index => {\n    // 選択した画像は削除可能\n    const newImages = [...images];\n    newImages.splice(index, 1);\n    setImages(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: e => handleOnSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"comment\",\n          value: commentText,\n          multiline: true,\n          minRows: 1,\n          maxRows: 20,\n          placeholder: \"\\u30B3\\u30E1\\u30F3\\u30C8\\u3092\\u66F8\\u304F\",\n          fullWidth: true,\n          variant: \"standard\",\n          disabled: isCommentSending,\n          onChange: e => setCommentText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: inputId,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            disabled: images.length >= maxImagesUpload,\n            component: \"span\",\n            children: \"\\u753B\\u50CF\\u8FFD\\u52A0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: inputId,\n            type: \"file\",\n            multiple: true,\n            accept: \"image/*,.png,.jpg,.jpeg,.gif\",\n            onChange: e => handleOnAddImage(e),\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), images.map((image, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\",\n            width: \"40%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete image\",\n            style: {\n              position: \"absolute\",\n              top: 10,\n              left: 10,\n              color: \"#aaa\"\n            },\n            onClick: () => handleOnRemoveImage(i),\n            children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image),\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), isCommentSending ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\"\n          // disableElevation\n          // disabled={!commentText}\n          ,\n          children: \"\\u6295\\u7A3F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Upimage, \"ruUvKOoUmw9o3+brHJOTKyoPE5c=\", false, function () {\n  return [useNavigate];\n});\n_c = Upimage;\nvar _c;\n$RefreshReg$(_c, \"Upimage\");","map":{"version":3,"names":["React","useEffect","useNavigate","Container","Alert","Typography","Button","TextField","IconButton","CircularProgress","Header","useState","axios","CancelIcon","jsxDEV","_jsxDEV","Upimage","_s","navigate","userData","JSON","parse","sessionStorage","getItem","username","loggedIn","isCommentSending","setIsCommentSending","images","setImages","maxImagesUpload","commentText","setCommentText","inputId","Math","random","toString","substring","baseUrl","handleOnSubmit","e","preventDefault","target","data","console","log","handleOnAddImage","files","handleOnRemoveImage","index","newImages","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","action","onSubmit","name","value","multiline","minRows","maxRows","placeholder","fullWidth","variant","disabled","onChange","htmlFor","length","component","id","type","multiple","accept","style","display","map","image","i","position","width","top","left","color","onClick","src","URL","createObjectURL","_c","$RefreshReg$"],"sources":["C:/Users/kkubo/Documents/00_GS/01_assignment/10_php4/clone/reactjs-php-login-system/frontend/src/components/Upimage.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Alert,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n    IconButton,\r\n    CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Header } from \"./Header\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\n\r\nexport const Upimage = () => {\r\n    /*------------------------ログイン確認------------------------*/\r\n    const navigate = useNavigate();\r\n    const userData = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    const username = userData?.username;\r\n\r\n    useEffect(() => {\r\n        const loggedIn = sessionStorage.getItem(\"loggedIn\");\r\n        if (!loggedIn) {\r\n            navigate(\"/login\");\r\n        }\r\n    }, [navigate]);\r\n\r\n    /*------------------------画像アップ------------------------*/\r\n    const [isCommentSending, setIsCommentSending] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const maxImagesUpload = 4; // 画像を最大4枚まで選択・アップロード\r\n    const [commentText, setCommentText] = useState(\"\");\r\n    const inputId = Math.random().toString(32).substring(2);\r\n    const baseUrl = \"http://localhost/00_GS/01_assignment/10_php4\";\r\n\r\n\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsCommentSending(true);\r\n\r\n        const target = e.target;\r\n\r\n        // const data = new FormData();\r\n\r\n        // images.map((image) => {\r\n        //     data.append(\"images[]\", image);\r\n        // });\r\n\r\n        // data.append(\"comment\", target.comment?.value || \"\");\r\n        // const postedComment = await axios.post(baseUrl + \"/api/upimages.php\", data, {\r\n        //     headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        // });\r\n\r\n        const data = images;\r\n        console.log(images);\r\n\r\n                // const postedComment = await axios.post(baseUrl + \"/api/upimages.php\", data, {\r\n        //     headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        // });\r\n\r\n\r\n        setIsCommentSending(false);\r\n    };\r\n\r\n    const handleOnAddImage = (e) => {\r\n        if (!e.target.files) return;\r\n        setImages([...images, ...e.target.files]);\r\n    };\r\n\r\n    const handleOnRemoveImage = (index) => {\r\n        // 選択した画像は削除可能\r\n        const newImages = [...images];\r\n        newImages.splice(index, 1);\r\n        setImages(newImages);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Container>\r\n                <form action=\"\" onSubmit={(e) => handleOnSubmit(e)}>\r\n                    <TextField\r\n                        name=\"comment\"\r\n                        value={commentText}\r\n                        multiline\r\n                        minRows={1}\r\n                        maxRows={20}\r\n                        placeholder=\"コメントを書く\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        disabled={isCommentSending}\r\n                        onChange={(e) => setCommentText(e.target.value)}\r\n                    />\r\n                    {/* 1つのボタンで画像を選択する */}\r\n                    <label htmlFor={inputId}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            disabled={images.length >= maxImagesUpload}\r\n                            component=\"span\"\r\n                        >\r\n                            画像追加\r\n                        </Button>\r\n                        <input\r\n                            id={inputId}\r\n                            type=\"file\"\r\n                            multiple\r\n                            accept=\"image/*,.png,.jpg,.jpeg,.gif\"\r\n                            onChange={(e) => handleOnAddImage(e)}\r\n                            style={{ display: \"none\" }}\r\n                        />\r\n                    </label>\r\n                    {/* 画像を選択したら選択中のすべての画像のプレビューを表示 */}\r\n                    {images.map((image, i) => (\r\n                        <div\r\n                            key={i}\r\n                            style={{\r\n                                position: \"relative\",\r\n                                width: \"40%\",\r\n                            }}\r\n                        >\r\n                            <IconButton\r\n                                aria-label=\"delete image\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    top: 10,\r\n                                    left: 10,\r\n                                    color: \"#aaa\",\r\n                                }}\r\n                                onClick={() => handleOnRemoveImage(i)}\r\n                            >\r\n                                <CancelIcon />\r\n                            </IconButton>\r\n                            <img\r\n                                src={URL.createObjectURL(image)}\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                    <br />\r\n                    <br />\r\n                    {isCommentSending ? (\r\n                        <CircularProgress />\r\n                    ) : (\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            // disableElevation\r\n                            // disabled={!commentText}\r\n                        >\r\n                            投稿\r\n                        </Button>\r\n                    )}\r\n                </form>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}